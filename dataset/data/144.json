{"problem_id": 144, "problem": "f", "method": "def f(n):\n    \"\"\" Implement the function f that takes n as a parameter,\n    and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    Example:\n    f(5) == [1, 2, 6, 24, 15]\n    \"\"\"\n    ret = []\n    for i in range(1,n+1):\n        if i%2 == 0:\n            x = 1\n            for j in range(1,i+1): x *= j\n            ret += [x]\n        else:\n            x = 0\n            for j in range(1,i+1): x += j\n            ret += [x]\n    return ret", "tests": [{"test_id": "676", "test": "def test():\n        assert f(1) == [1]", "coverage_executed": "> def f(n):\n>     \"\"\" Implement the function f that takes n as a parameter,\n>     and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n>     or the sum of numbers from 1 to i otherwise.\n>     i starts from 1.\n>     the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n>     Example:\n>     f(5) == [1, 2, 6, 24, 15]\n>     \"\"\"\n>     ret = []\n>     for i in range(1,n+1):\n>         if i%2 == 0:\n\n\n\n>         else:\n>             x = 0\n>             for j in range(1,i+1): x += j\n>             ret += [x]\n>     return ret", "coverage": "> def f(n):\n>     \"\"\" Implement the function f that takes n as a parameter,\n>     and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n>     or the sum of numbers from 1 to i otherwise.\n>     i starts from 1.\n>     the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n>     Example:\n>     f(5) == [1, 2, 6, 24, 15]\n>     \"\"\"\n>     ret = []\n>     for i in range(1,n+1):\n>         if i%2 == 0:\n!             x = 1\n!             for j in range(1,i+1): x *= j\n!             ret += [x]\n>         else:\n>             x = 0\n>             for j in range(1,i+1): x += j\n>             ret += [x]\n>     return ret", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "!", "!", "!", ">", ">", ">", ">", "?"]}, {"test_id": "677", "test": "def test():\n        assert f(3) == [1, 2, 6]", "coverage_executed": "> def f(n):\n>     \"\"\" Implement the function f that takes n as a parameter,\n>     and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n>     or the sum of numbers from 1 to i otherwise.\n>     i starts from 1.\n>     the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n>     Example:\n>     f(5) == [1, 2, 6, 24, 15]\n>     \"\"\"\n>     ret = []\n>     for i in range(1,n+1):\n>         if i%2 == 0:\n>             x = 1\n>             for j in range(1,i+1): x *= j\n>             ret += [x]\n>         else:\n>             x = 0\n>             for j in range(1,i+1): x += j\n>             ret += [x]\n>     return ret", "coverage": "> def f(n):\n>     \"\"\" Implement the function f that takes n as a parameter,\n>     and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n>     or the sum of numbers from 1 to i otherwise.\n>     i starts from 1.\n>     the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n>     Example:\n>     f(5) == [1, 2, 6, 24, 15]\n>     \"\"\"\n>     ret = []\n>     for i in range(1,n+1):\n>         if i%2 == 0:\n>             x = 1\n>             for j in range(1,i+1): x *= j\n>             ret += [x]\n>         else:\n>             x = 0\n>             for j in range(1,i+1): x += j\n>             ret += [x]\n>     return ret", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "675", "test": "def test():\n        assert f(7) == [1, 2, 6, 24, 15, 720, 28]", "coverage_executed": "> def f(n):\n>     \"\"\" Implement the function f that takes n as a parameter,\n>     and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n>     or the sum of numbers from 1 to i otherwise.\n>     i starts from 1.\n>     the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n>     Example:\n>     f(5) == [1, 2, 6, 24, 15]\n>     \"\"\"\n>     ret = []\n>     for i in range(1,n+1):\n>         if i%2 == 0:\n>             x = 1\n>             for j in range(1,i+1): x *= j\n>             ret += [x]\n>         else:\n>             x = 0\n>             for j in range(1,i+1): x += j\n>             ret += [x]\n>     return ret", "coverage": "> def f(n):\n>     \"\"\" Implement the function f that takes n as a parameter,\n>     and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n>     or the sum of numbers from 1 to i otherwise.\n>     i starts from 1.\n>     the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n>     Example:\n>     f(5) == [1, 2, 6, 24, 15]\n>     \"\"\"\n>     ret = []\n>     for i in range(1,n+1):\n>         if i%2 == 0:\n>             x = 1\n>             for j in range(1,i+1): x *= j\n>             ret += [x]\n>         else:\n>             x = 0\n>             for j in range(1,i+1): x += j\n>             ret += [x]\n>     return ret", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "674", "test": "def test():\n        assert f(5) == [1, 2, 6, 24, 15]", "coverage_executed": "> def f(n):\n>     \"\"\" Implement the function f that takes n as a parameter,\n>     and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n>     or the sum of numbers from 1 to i otherwise.\n>     i starts from 1.\n>     the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n>     Example:\n>     f(5) == [1, 2, 6, 24, 15]\n>     \"\"\"\n>     ret = []\n>     for i in range(1,n+1):\n>         if i%2 == 0:\n>             x = 1\n>             for j in range(1,i+1): x *= j\n>             ret += [x]\n>         else:\n>             x = 0\n>             for j in range(1,i+1): x += j\n>             ret += [x]\n>     return ret", "coverage": "> def f(n):\n>     \"\"\" Implement the function f that takes n as a parameter,\n>     and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n>     or the sum of numbers from 1 to i otherwise.\n>     i starts from 1.\n>     the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n>     Example:\n>     f(5) == [1, 2, 6, 24, 15]\n>     \"\"\"\n>     ret = []\n>     for i in range(1,n+1):\n>         if i%2 == 0:\n>             x = 1\n>             for j in range(1,i+1): x *= j\n>             ret += [x]\n>         else:\n>             x = 0\n>             for j in range(1,i+1): x += j\n>             ret += [x]\n>     return ret", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", ">", ">", ">", "?"]}]}