{"problem_id": 56, "problem": "count_upper", "method": "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0,len(s),2):\n        if s[i] in \"AEIOU\":\n            count += 1\n    return count", "tests": [{"test_id": "615", "test": "def test():\n        assert count_upper('aBCdEf')  == 1", "coverage_executed": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n>             count += 1\n>     return count", "coverage": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n>             count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", "?"]}, {"test_id": "617", "test": "def test():\n        assert count_upper('dBBE') == 0", "coverage_executed": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n\n>     return count", "coverage": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n!             count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "!", "?"]}, {"test_id": "616", "test": "def test():\n        assert count_upper('abcdefg') == 0", "coverage_executed": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n\n>     return count", "coverage": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n!             count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "!", "?"]}, {"test_id": "621", "test": "def test():\n        assert count_upper('EEEE') == 2", "coverage_executed": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n>             count += 1\n>     return count", "coverage": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n>             count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", "?"]}, {"test_id": "619", "test": "def test():\n        assert count_upper('U')  == 1", "coverage_executed": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n>             count += 1\n>     return count", "coverage": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n>             count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", "?"]}, {"test_id": "618", "test": "def test():\n        assert count_upper('B')  == 0", "coverage_executed": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n\n>     return count", "coverage": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n>         if s[i] in \"AEIOU\":\n!             count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "!", "?"]}, {"test_id": "620", "test": "def test():\n        assert count_upper('') == 0", "coverage_executed": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n\n\n>     return count", "coverage": "> def count_upper(s):\n>     \"\"\"\n>     Given a string s, count the number of uppercase vowels in even indices.\n>     For example:\n>     count_upper('aBCdEf') returns 1\n>     count_upper('abcdefg') returns 0\n>     count_upper('dBBE') returns 0\n>     \"\"\"\n>     count = 0\n>     for i in range(0,len(s),2):\n!         if s[i] in \"AEIOU\":\n!             count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", "!", "?"]}]}