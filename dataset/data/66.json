{"problem_id": 66, "problem": "get_max_triples", "method": "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    A = [i*i - i + 1 for i in range(1,n+1)]\n    ans = []\n    for i in range(n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if (A[i]+A[j]+A[k])%3 == 0:\n                    ans += [(A[i],A[j],A[k])]\n    return len(ans)", "tests": [{"test_id": "1054", "test": "def test():\n        assert get_max_triples(100) == 53361", "coverage_executed": "> def get_max_triples(n):\n>     \"\"\"\n>     You are given a positive integer n. You have to create an integer array a of length n.\n>         For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n>         Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n>     and a[i] + a[j] + a[k] is a multiple of 3.\n>     Example :\n>         Input: n = 5\n>         Output: 1\n>         Explanation: \n>         a = [1, 3, 7, 13, 21]\n>         The only valid triple is (1, 7, 13).\n>     \"\"\"\n>     A = [i*i - i + 1 for i in range(1,n+1)]\n>     ans = []\n>     for i in range(n):\n>         for j in range(i+1,n):\n>             for k in range(j+1,n):\n>                 if (A[i]+A[j]+A[k])%3 == 0:\n>                     ans += [(A[i],A[j],A[k])]\n>     return len(ans)", "coverage": "> def get_max_triples(n):\n>     \"\"\"\n>     You are given a positive integer n. You have to create an integer array a of length n.\n>         For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n>         Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n>     and a[i] + a[j] + a[k] is a multiple of 3.\n>     Example :\n>         Input: n = 5\n>         Output: 1\n>         Explanation: \n>         a = [1, 3, 7, 13, 21]\n>         The only valid triple is (1, 7, 13).\n>     \"\"\"\n>     A = [i*i - i + 1 for i in range(1,n+1)]\n>     ans = []\n>     for i in range(n):\n>         for j in range(i+1,n):\n>             for k in range(j+1,n):\n>                 if (A[i]+A[j]+A[k])%3 == 0:\n>                     ans += [(A[i],A[j],A[k])]\n>     return len(ans)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", "?"]}, {"test_id": "1051", "test": "def test():\n        assert get_max_triples(5) == 1", "coverage_executed": "> def get_max_triples(n):\n>     \"\"\"\n>     You are given a positive integer n. You have to create an integer array a of length n.\n>         For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n>         Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n>     and a[i] + a[j] + a[k] is a multiple of 3.\n>     Example :\n>         Input: n = 5\n>         Output: 1\n>         Explanation: \n>         a = [1, 3, 7, 13, 21]\n>         The only valid triple is (1, 7, 13).\n>     \"\"\"\n>     A = [i*i - i + 1 for i in range(1,n+1)]\n>     ans = []\n>     for i in range(n):\n>         for j in range(i+1,n):\n>             for k in range(j+1,n):\n>                 if (A[i]+A[j]+A[k])%3 == 0:\n>                     ans += [(A[i],A[j],A[k])]\n>     return len(ans)", "coverage": "> def get_max_triples(n):\n>     \"\"\"\n>     You are given a positive integer n. You have to create an integer array a of length n.\n>         For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n>         Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n>     and a[i] + a[j] + a[k] is a multiple of 3.\n>     Example :\n>         Input: n = 5\n>         Output: 1\n>         Explanation: \n>         a = [1, 3, 7, 13, 21]\n>         The only valid triple is (1, 7, 13).\n>     \"\"\"\n>     A = [i*i - i + 1 for i in range(1,n+1)]\n>     ans = []\n>     for i in range(n):\n>         for j in range(i+1,n):\n>             for k in range(j+1,n):\n>                 if (A[i]+A[j]+A[k])%3 == 0:\n>                     ans += [(A[i],A[j],A[k])]\n>     return len(ans)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", "?"]}, {"test_id": "1052", "test": "def test():\n        assert get_max_triples(6) == 4", "coverage_executed": "> def get_max_triples(n):\n>     \"\"\"\n>     You are given a positive integer n. You have to create an integer array a of length n.\n>         For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n>         Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n>     and a[i] + a[j] + a[k] is a multiple of 3.\n>     Example :\n>         Input: n = 5\n>         Output: 1\n>         Explanation: \n>         a = [1, 3, 7, 13, 21]\n>         The only valid triple is (1, 7, 13).\n>     \"\"\"\n>     A = [i*i - i + 1 for i in range(1,n+1)]\n>     ans = []\n>     for i in range(n):\n>         for j in range(i+1,n):\n>             for k in range(j+1,n):\n>                 if (A[i]+A[j]+A[k])%3 == 0:\n>                     ans += [(A[i],A[j],A[k])]\n>     return len(ans)", "coverage": "> def get_max_triples(n):\n>     \"\"\"\n>     You are given a positive integer n. You have to create an integer array a of length n.\n>         For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n>         Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n>     and a[i] + a[j] + a[k] is a multiple of 3.\n>     Example :\n>         Input: n = 5\n>         Output: 1\n>         Explanation: \n>         a = [1, 3, 7, 13, 21]\n>         The only valid triple is (1, 7, 13).\n>     \"\"\"\n>     A = [i*i - i + 1 for i in range(1,n+1)]\n>     ans = []\n>     for i in range(n):\n>         for j in range(i+1,n):\n>             for k in range(j+1,n):\n>                 if (A[i]+A[j]+A[k])%3 == 0:\n>                     ans += [(A[i],A[j],A[k])]\n>     return len(ans)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", "?"]}, {"test_id": "1053", "test": "def test():\n        assert get_max_triples(10) == 36", "coverage_executed": "> def get_max_triples(n):\n>     \"\"\"\n>     You are given a positive integer n. You have to create an integer array a of length n.\n>         For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n>         Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n>     and a[i] + a[j] + a[k] is a multiple of 3.\n>     Example :\n>         Input: n = 5\n>         Output: 1\n>         Explanation: \n>         a = [1, 3, 7, 13, 21]\n>         The only valid triple is (1, 7, 13).\n>     \"\"\"\n>     A = [i*i - i + 1 for i in range(1,n+1)]\n>     ans = []\n>     for i in range(n):\n>         for j in range(i+1,n):\n>             for k in range(j+1,n):\n>                 if (A[i]+A[j]+A[k])%3 == 0:\n>                     ans += [(A[i],A[j],A[k])]\n>     return len(ans)", "coverage": "> def get_max_triples(n):\n>     \"\"\"\n>     You are given a positive integer n. You have to create an integer array a of length n.\n>         For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n>         Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n>     and a[i] + a[j] + a[k] is a multiple of 3.\n>     Example :\n>         Input: n = 5\n>         Output: 1\n>         Explanation: \n>         a = [1, 3, 7, 13, 21]\n>         The only valid triple is (1, 7, 13).\n>     \"\"\"\n>     A = [i*i - i + 1 for i in range(1,n+1)]\n>     ans = []\n>     for i in range(n):\n>         for j in range(i+1,n):\n>             for k in range(j+1,n):\n>                 if (A[i]+A[j]+A[k])%3 == 0:\n>                     ans += [(A[i],A[j],A[k])]\n>     return len(ans)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", "?"]}]}