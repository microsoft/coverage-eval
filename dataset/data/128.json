{"problem_id": 128, "problem": "specialFilter", "method": "def specialFilter(nums):\n    \"\"\"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n    count = 0\n    for num in nums:\n        if num > 10:\n            odd_digits = (1, 3, 5, 7, 9)\n            number_as_string = str(num)\n            if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n                count += 1\n    return count", "tests": [{"test_id": "1049", "test": "def test():\n        assert specialFilter([1]) == 0", "coverage_executed": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n\n\n\n\n>     return count", "coverage": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n!             odd_digits = (1, 3, 5, 7, 9)\n!             number_as_string = str(num)\n!             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n!                 count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "!", "!", "!", "!", "?"]}, {"test_id": "1048", "test": "def test():\n        assert specialFilter([71, -2, -33, 75, 21, 19]) == 3", "coverage_executed": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n>             odd_digits = (1, 3, 5, 7, 9)\n>             number_as_string = str(num)\n>             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n>                 count += 1\n>     return count", "coverage": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n>             odd_digits = (1, 3, 5, 7, 9)\n>             number_as_string = str(num)\n>             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n>                 count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "1047", "test": "def test():\n        assert specialFilter([43, -12, 93, 125, 121, 109]) == 4", "coverage_executed": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n>             odd_digits = (1, 3, 5, 7, 9)\n>             number_as_string = str(num)\n>             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n>                 count += 1\n>     return count", "coverage": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n>             odd_digits = (1, 3, 5, 7, 9)\n>             number_as_string = str(num)\n>             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n>                 count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "1050", "test": "def test():\n        assert specialFilter([]) == 0", "coverage_executed": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n\n\n\n\n\n>     return count", "coverage": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n!         if num > 10:\n!             odd_digits = (1, 3, 5, 7, 9)\n!             number_as_string = str(num)\n!             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n!                 count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", "!", "!", "!", "!", "?"]}, {"test_id": "1046", "test": "def test():\n        assert specialFilter([33, -2, -3, 45, 21, 109]) == 2", "coverage_executed": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n>             odd_digits = (1, 3, 5, 7, 9)\n>             number_as_string = str(num)\n>             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n>                 count += 1\n>     return count", "coverage": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n>             odd_digits = (1, 3, 5, 7, 9)\n>             number_as_string = str(num)\n>             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n>                 count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "1044", "test": "def test():\n        assert specialFilter([5, -2, 1, -5]) == 0", "coverage_executed": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n\n\n\n\n>     return count", "coverage": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n!             odd_digits = (1, 3, 5, 7, 9)\n!             number_as_string = str(num)\n!             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n!                 count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "!", "!", "!", "!", "?"]}, {"test_id": "1045", "test": "def test():\n        assert specialFilter([15, -73, 14, -15]) == 1", "coverage_executed": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n>             odd_digits = (1, 3, 5, 7, 9)\n>             number_as_string = str(num)\n>             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n>                 count += 1\n>     return count", "coverage": "> def specialFilter(nums):\n>     \"\"\"Write a function that takes an array of numbers as input and returns \n>     the number of elements in the array that are greater than 10 and both \n>     first and last digits of a number are odd (1, 3, 5, 7, 9).\n>     For example:\n>     specialFilter([15, -73, 14, -15]) => 1 \n>     specialFilter([33, -2, -3, 45, 21, 109]) => 2\n>     \"\"\"\n>     count = 0\n>     for num in nums:\n>         if num > 10:\n>             odd_digits = (1, 3, 5, 7, 9)\n>             number_as_string = str(num)\n>             if int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits:\n>                 count += 1\n>     return count", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", "?"]}]}