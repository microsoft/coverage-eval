{"problem_id": 6, "problem": "triangle_area", "method": "def triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    if a + b <= c or a + c <= b or b + c <= a:\n        return -1 \n    s = (a + b + c)/2    \n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    area = round(area, 2)\n    return area", "tests": [{"test_id": "396", "test": "def test():\n        assert triangle_area(3, 4, 5) == 6.00, \"This prints if this assert fails 1 (good for debugging!)\"", "coverage_executed": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n\n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n!         return -1 \n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", "?", "?", "?", "?"]}, {"test_id": "397", "test": "def test():\n        assert triangle_area(1, 2, 10) == -1", "coverage_executed": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n>         return -1 \n\n\n\n", "coverage": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n>         return -1 \n!     s = (a + b + c)/2    \n!     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n!     area = round(area, 2)\n!     return area", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?", "?", "?", "?"]}, {"test_id": "404", "test": "def test():\n        assert triangle_area(2, 2, 10) == -1", "coverage_executed": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n>         return -1 \n\n\n\n", "coverage": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n>         return -1 \n!     s = (a + b + c)/2    \n!     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n!     area = round(area, 2)\n!     return area", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?", "?", "?", "?"]}, {"test_id": "398", "test": "def test():\n        assert triangle_area(4, 8, 5) == 8.18", "coverage_executed": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n\n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n!         return -1 \n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", "?", "?", "?", "?"]}, {"test_id": "399", "test": "def test():\n        assert triangle_area(2, 2, 2) == 1.73", "coverage_executed": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n\n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n!         return -1 \n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", "?", "?", "?", "?"]}, {"test_id": "402", "test": "def test():\n        assert triangle_area(2, 6, 3) == -1", "coverage_executed": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n>         return -1 \n\n\n\n", "coverage": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n>         return -1 \n!     s = (a + b + c)/2    \n!     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n!     area = round(area, 2)\n!     return area", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?", "?", "?", "?"]}, {"test_id": "403", "test": "def test():\n        assert triangle_area(1, 1, 1) == 0.43, \"This prints if this assert fails 2 (also good for debugging!)\"", "coverage_executed": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n\n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n!         return -1 \n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", "?", "?", "?", "?"]}, {"test_id": "401", "test": "def test():\n        assert triangle_area(10, 5, 7) == 16.25", "coverage_executed": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n\n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n!         return -1 \n>     s = (a + b + c)/2    \n>     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n>     area = round(area, 2)\n>     return area", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", "?", "?", "?", "?"]}, {"test_id": "400", "test": "def test():\n        assert triangle_area(1, 2, 3) == -1", "coverage_executed": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n>         return -1 \n\n\n\n", "coverage": "> def triangle_area(a, b, c):\n>     '''\n>     Given the lengths of the three sides of a triangle. Return the area of\n>     the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n>     Otherwise return -1\n>     Three sides make a valid triangle when the sum of any two sides is greater \n>     than the third side.\n>     Example:\n>     triangle_area(3, 4, 5) == 6.00\n>     triangle_area(1, 2, 10) == -1\n>     '''\n>     if a + b <= c or a + c <= b or b + c <= a:\n>         return -1 \n!     s = (a + b + c)/2    \n!     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n!     area = round(area, 2)\n!     return area", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?", "?", "?", "?"]}]}