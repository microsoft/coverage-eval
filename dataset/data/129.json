{"problem_id": 129, "problem": "unique", "method": "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(list(set(l)))", "tests": [{"test_id": "147", "test": "def test():\n        assert unique([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]", "coverage_executed": "> def unique(l: list):\n>     \"\"\"Return sorted unique elements in a list\n>     >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n>     [0, 2, 3, 5, 9, 123]\n>     \"\"\"\n>     return sorted(list(set(l)))", "coverage": "> def unique(l: list):\n>     \"\"\"Return sorted unique elements in a list\n>     >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n>     [0, 2, 3, 5, 9, 123]\n>     \"\"\"\n>     return sorted(list(set(l)))", "coverage_sequence": [">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?"]}]}