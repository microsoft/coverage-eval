{"problem_id": 54, "problem": "is_prime", "method": "def is_prime(n):\n    \"\"\"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n    if n < 2:\n        return False\n    for k in range(2, n - 1):\n        if n % k == 0:\n            return False\n    return True", "tests": [{"test_id": "138", "test": "def test():\n        assert is_prime(13441 * 19) == False", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n!     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", ">", "?"]}, {"test_id": "128", "test": "def test():\n        assert is_prime(11) == True", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n\n>     return True", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n!             return False\n>     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", "!", "?"]}, {"test_id": "129", "test": "def test():\n        assert is_prime(13441) == True", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n\n>     return True", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n!             return False\n>     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", "!", "?"]}, {"test_id": "134", "test": "def test():\n        assert is_prime(11) == True", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n\n>     return True", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n!             return False\n>     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", "!", "?"]}, {"test_id": "135", "test": "def test():\n        assert is_prime(17) == True", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n\n>     return True", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n!             return False\n>     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", "!", "?"]}, {"test_id": "137", "test": "def test():\n        assert is_prime(11 * 7) == False", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n!     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", ">", "?"]}, {"test_id": "136", "test": "def test():\n        assert is_prime(5 * 17) == False", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n!     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", ">", "?"]}, {"test_id": "132", "test": "def test():\n        assert is_prime(1) == False", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n>         return False\n\n\n\n", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n>         return False\n!     for k in range(2, n - 1):\n!         if n % k == 0:\n!             return False\n!     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "!", "!", "!", "?"]}, {"test_id": "133", "test": "def test():\n        assert is_prime(5) == True", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n\n>     return True", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n!             return False\n>     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", "!", "?"]}, {"test_id": "131", "test": "def test():\n        assert is_prime(4) == False", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n!     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", ">", "?"]}, {"test_id": "126", "test": "def test():\n        assert is_prime(6) == False", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n>             return False\n!     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", ">", "?"]}, {"test_id": "127", "test": "def test():\n        assert is_prime(101) == True", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n\n>     return True", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n!             return False\n>     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", "!", "?"]}, {"test_id": "130", "test": "def test():\n        assert is_prime(61) == True", "coverage_executed": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n\n>     return True", "coverage": "> def is_prime(n):\n>     \"\"\"Return true if a given number is prime, and false otherwise.\n>     >>> is_prime(6)\n>     False\n>     >>> is_prime(101)\n>     True\n>     >>> is_prime(11)\n>     True\n>     >>> is_prime(13441)\n>     True\n>     >>> is_prime(61)\n>     True\n>     >>> is_prime(4)\n>     False\n>     >>> is_prime(1)\n>     False\n>     \"\"\"\n>     if n < 2:\n!         return False\n>     for k in range(2, n - 1):\n>         if n % k == 0:\n!             return False\n>     return True", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", "!", "?"]}]}