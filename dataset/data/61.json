{"problem_id": 61, "problem": "greacommon_divisor", "method": "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a", "tests": [{"test_id": "56", "test": "def test():\n        assert greatest_common_divisor(144, 60) == 12", "coverage_executed": "> def greatest_common_divisor(a: int, b: int) -> int:\n>     \"\"\" Return a greatest common divisor of two integers a and b\n>     >>> greatest_common_divisor(3, 5)\n>     1\n>     >>> greatest_common_divisor(25, 15)\n>     5\n>     \"\"\"\n>     while b:\n>         a, b = b, a % b\n>     return a", "coverage": "> def greatest_common_divisor(a: int, b: int) -> int:\n>     \"\"\" Return a greatest common divisor of two integers a and b\n>     >>> greatest_common_divisor(3, 5)\n>     1\n>     >>> greatest_common_divisor(25, 15)\n>     5\n>     \"\"\"\n>     while b:\n>         a, b = b, a % b\n>     return a", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "54", "test": "def test():\n        assert greatest_common_divisor(10, 15) == 5", "coverage_executed": "> def greatest_common_divisor(a: int, b: int) -> int:\n>     \"\"\" Return a greatest common divisor of two integers a and b\n>     >>> greatest_common_divisor(3, 5)\n>     1\n>     >>> greatest_common_divisor(25, 15)\n>     5\n>     \"\"\"\n>     while b:\n>         a, b = b, a % b\n>     return a", "coverage": "> def greatest_common_divisor(a: int, b: int) -> int:\n>     \"\"\" Return a greatest common divisor of two integers a and b\n>     >>> greatest_common_divisor(3, 5)\n>     1\n>     >>> greatest_common_divisor(25, 15)\n>     5\n>     \"\"\"\n>     while b:\n>         a, b = b, a % b\n>     return a", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "55", "test": "def test():\n        assert greatest_common_divisor(49, 14) == 7", "coverage_executed": "> def greatest_common_divisor(a: int, b: int) -> int:\n>     \"\"\" Return a greatest common divisor of two integers a and b\n>     >>> greatest_common_divisor(3, 5)\n>     1\n>     >>> greatest_common_divisor(25, 15)\n>     5\n>     \"\"\"\n>     while b:\n>         a, b = b, a % b\n>     return a", "coverage": "> def greatest_common_divisor(a: int, b: int) -> int:\n>     \"\"\" Return a greatest common divisor of two integers a and b\n>     >>> greatest_common_divisor(3, 5)\n>     1\n>     >>> greatest_common_divisor(25, 15)\n>     5\n>     \"\"\"\n>     while b:\n>         a, b = b, a % b\n>     return a", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "53", "test": "def test():\n        assert greatest_common_divisor(3, 7) == 1", "coverage_executed": "> def greatest_common_divisor(a: int, b: int) -> int:\n>     \"\"\" Return a greatest common divisor of two integers a and b\n>     >>> greatest_common_divisor(3, 5)\n>     1\n>     >>> greatest_common_divisor(25, 15)\n>     5\n>     \"\"\"\n>     while b:\n>         a, b = b, a % b\n>     return a", "coverage": "> def greatest_common_divisor(a: int, b: int) -> int:\n>     \"\"\" Return a greatest common divisor of two integers a and b\n>     >>> greatest_common_divisor(3, 5)\n>     1\n>     >>> greatest_common_divisor(25, 15)\n>     5\n>     \"\"\"\n>     while b:\n>         a, b = b, a % b\n>     return a", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}]}