{"problem_id": 77, "problem": "fibfib", "method": "def fibfib(n: int):\n    \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n    Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n    >>> fibfib(1)\n    0\n    >>> fibfib(5)\n    4\n    >>> fibfib(8)\n    24\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "tests": [{"test_id": "318", "test": "def test():\n        assert fibfib(10) == 81", "coverage_executed": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "320", "test": "def test():\n        assert fibfib(14) == 927", "coverage_executed": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "319", "test": "def test():\n        assert fibfib(12) == 274", "coverage_executed": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "316", "test": "def test():\n        assert fibfib(5) == 4", "coverage_executed": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "317", "test": "def test():\n        assert fibfib(8) == 24", "coverage_executed": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 0\n>     if n == 2:\n>         return 1\n>     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", ">", ">", "?"]}, {"test_id": "315", "test": "def test():\n        assert fibfib(1) == 0", "coverage_executed": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n\n>     if n == 1:\n>         return 0\n\n\n", "coverage": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n!         return 0\n>     if n == 1:\n>         return 0\n!     if n == 2:\n!         return 1\n!     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", "!", "!", "?"]}, {"test_id": "314", "test": "def test():\n        assert fibfib(2) == 1", "coverage_executed": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n\n>     if n == 1:\n\n>     if n == 2:\n>         return 1\n", "coverage": "> def fibfib(n: int):\n>     \"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n>     fibfib(0) == 0\n>     fibfib(1) == 0\n>     fibfib(2) == 1\n>     fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n>     Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n>     >>> fibfib(1)\n>     0\n>     >>> fibfib(5)\n>     4\n>     >>> fibfib(8)\n>     24\n>     \"\"\"\n>     if n == 0:\n!         return 0\n>     if n == 1:\n!         return 0\n>     if n == 2:\n>         return 1\n!     return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", "!", ">", ">", "?"]}]}