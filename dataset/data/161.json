{"problem_id": 161, "problem": "fib", "method": "def fib(n: int):\n    \"\"\"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return fib(n - 1) + fib(n - 2)", "tests": [{"test_id": "260", "test": "def test():\n        assert fib(8) == 21", "coverage_executed": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 1\n>     return fib(n - 1) + fib(n - 2)", "coverage": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 1\n>     return fib(n - 1) + fib(n - 2)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", "?"]}, {"test_id": "258", "test": "def test():\n        assert fib(10) == 55", "coverage_executed": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 1\n>     return fib(n - 1) + fib(n - 2)", "coverage": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 1\n>     return fib(n - 1) + fib(n - 2)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", "?"]}, {"test_id": "259", "test": "def test():\n        assert fib(1) == 1", "coverage_executed": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n\n>     if n == 1:\n>         return 1\n", "coverage": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n!         return 0\n>     if n == 1:\n>         return 1\n!     return fib(n - 1) + fib(n - 2)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", ">", ">", "?"]}, {"test_id": "261", "test": "def test():\n        assert fib(11) == 89", "coverage_executed": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 1\n>     return fib(n - 1) + fib(n - 2)", "coverage": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 1\n>     return fib(n - 1) + fib(n - 2)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", "?"]}, {"test_id": "262", "test": "def test():\n        assert fib(12) == 144", "coverage_executed": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 1\n>     return fib(n - 1) + fib(n - 2)", "coverage": "> def fib(n: int):\n>     \"\"\"Return n-th Fibonacci number.\n>     >>> fib(10)\n>     55\n>     >>> fib(1)\n>     1\n>     >>> fib(8)\n>     21\n>     \"\"\"\n>     if n == 0:\n>         return 0\n>     if n == 1:\n>         return 1\n>     return fib(n - 1) + fib(n - 2)", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", ">", ">", "?"]}]}