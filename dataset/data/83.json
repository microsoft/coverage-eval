{"problem_id": 83, "problem": "all_prefixes", "method": "def all_prefixes(string: str) -> List[str]:\n    \"\"\" Return list of all prefixes from shortest to longest of the input string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n    result = []\n    for i in range(len(string)):\n        result.append(string[:i+1])\n    return result", "tests": [{"test_id": "59", "test": "def test():\n        assert all_prefixes('WWW') == ['W', 'WW', 'WWW']", "coverage_executed": "> def all_prefixes(string: str) -> List[str]:\n>     \"\"\" Return list of all prefixes from shortest to longest of the input string\n>     >>> all_prefixes('abc')\n>     ['a', 'ab', 'abc']\n>     \"\"\"\n>     result = []\n>     for i in range(len(string)):\n>         result.append(string[:i+1])\n>     return result", "coverage": "> def all_prefixes(string: str) -> List[str]:\n>     \"\"\" Return list of all prefixes from shortest to longest of the input string\n>     >>> all_prefixes('abc')\n>     ['a', 'ab', 'abc']\n>     \"\"\"\n>     result = []\n>     for i in range(len(string)):\n>         result.append(string[:i+1])\n>     return result", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "58", "test": "def test():\n        assert all_prefixes('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']", "coverage_executed": "> def all_prefixes(string: str) -> List[str]:\n>     \"\"\" Return list of all prefixes from shortest to longest of the input string\n>     >>> all_prefixes('abc')\n>     ['a', 'ab', 'abc']\n>     \"\"\"\n>     result = []\n>     for i in range(len(string)):\n>         result.append(string[:i+1])\n>     return result", "coverage": "> def all_prefixes(string: str) -> List[str]:\n>     \"\"\" Return list of all prefixes from shortest to longest of the input string\n>     >>> all_prefixes('abc')\n>     ['a', 'ab', 'abc']\n>     \"\"\"\n>     result = []\n>     for i in range(len(string)):\n>         result.append(string[:i+1])\n>     return result", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "57", "test": "def test():\n        assert all_prefixes('') == []", "coverage_executed": "> def all_prefixes(string: str) -> List[str]:\n>     \"\"\" Return list of all prefixes from shortest to longest of the input string\n>     >>> all_prefixes('abc')\n>     ['a', 'ab', 'abc']\n>     \"\"\"\n>     result = []\n>     for i in range(len(string)):\n\n>     return result", "coverage": "> def all_prefixes(string: str) -> List[str]:\n>     \"\"\" Return list of all prefixes from shortest to longest of the input string\n>     >>> all_prefixes('abc')\n>     ['a', 'ab', 'abc']\n>     \"\"\"\n>     result = []\n>     for i in range(len(string)):\n!         result.append(string[:i+1])\n>     return result", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", ">", "!", "?"]}]}