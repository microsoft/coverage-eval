{"problem_id": 60, "problem": "derivative", "method": "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"\n    return [(i * x) for i, x in enumerate(xs)][1:]", "tests": [{"test_id": "309", "test": "def test():\n        assert derivative([3, 1, 2, 4, 5]) == [1, 4, 12, 20]", "coverage_executed": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?"]}, {"test_id": "312", "test": "def test():\n        assert derivative([3, 2, 1, 0, 4]) == [2, 2, 0, 16]", "coverage_executed": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?"]}, {"test_id": "313", "test": "def test():\n        assert derivative([1]) == []", "coverage_executed": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?"]}, {"test_id": "311", "test": "def test():\n        assert derivative([3, 2, 1]) == [2, 2]", "coverage_executed": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?"]}, {"test_id": "310", "test": "def test():\n        assert derivative([1, 2, 3]) == [2, 6]", "coverage_executed": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage": "> def derivative(xs: list):\n>     \"\"\" xs represent coefficients of a polynomial.\n>     xs[0] + xs[1] * x + xs[2] * x^2 + ....\n>      Return derivative of this polynomial in the same form.\n>     >>> derivative([3, 1, 2, 4, 5])\n>     [1, 4, 12, 20]\n>     >>> derivative([1, 2, 3])\n>     [2, 6]\n>     \"\"\"\n>     return [(i * x) for i, x in enumerate(xs)][1:]", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", "?"]}]}