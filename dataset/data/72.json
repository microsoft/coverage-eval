{"problem_id": 72, "problem": "monotonic", "method": "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if l == sorted(l) or l == sorted(l, reverse=True):\n        return True\n    return False", "tests": [{"test_id": "278", "test": "def test():\n        assert monotonic([4, 1, 0, -10]) == True", "coverage_executed": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n", "coverage": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n!     return False", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "279", "test": "def test():\n        assert monotonic([4, 1, 1, 0]) == True", "coverage_executed": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n", "coverage": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n!     return False", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "276", "test": "def test():\n        assert monotonic([1, 2, 4, 20]) == True", "coverage_executed": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n", "coverage": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n!     return False", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "281", "test": "def test():\n        assert monotonic([1, 2, 3, 4, 5, 60]) == True", "coverage_executed": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n", "coverage": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n!     return False", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "280", "test": "def test():\n        assert monotonic([1, 2, 3, 2, 5, 60]) == False", "coverage_executed": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n\n>     return False", "coverage": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n!         return True\n>     return False", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", "?"]}, {"test_id": "277", "test": "def test():\n        assert monotonic([1, 20, 4, 10]) == False", "coverage_executed": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n\n>     return False", "coverage": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n!         return True\n>     return False", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", "!", "?"]}, {"test_id": "275", "test": "def test():\n        assert monotonic([1, 2, 4, 10]) == True", "coverage_executed": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n", "coverage": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n!     return False", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}, {"test_id": "282", "test": "def test():\n        assert monotonic([9, 9, 9, 9]) == True", "coverage_executed": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n", "coverage": "> def monotonic(l: list):\n>     \"\"\"Return True is list elements are monotonically increasing or decreasing.\n>     >>> monotonic([1, 2, 4, 20])\n>     True\n>     >>> monotonic([1, 20, 4, 10])\n>     False\n>     >>> monotonic([4, 1, 0, -10])\n>     True\n>     \"\"\"\n>     if l == sorted(l) or l == sorted(l, reverse=True):\n>         return True\n!     return False", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?", "?", ">", ">", "?"]}]}