{"problem_id": 11, "problem": "string_sequence", "method": "def string_sequence(n: int) -> str:\n    \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n    >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \"\"\"\n    return ' '.join([str(x) for x in range(n + 1)])", "tests": [{"test_id": "60", "test": "def test():\n        assert string_sequence(0) == '0'", "coverage_executed": "> def string_sequence(n: int) -> str:\n>     \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n>     >>> string_sequence(0)\n>     '0'\n>     >>> string_sequence(5)\n>     '0 1 2 3 4 5'\n>     \"\"\"\n>     return ' '.join([str(x) for x in range(n + 1)])", "coverage": "> def string_sequence(n: int) -> str:\n>     \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n>     >>> string_sequence(0)\n>     '0'\n>     >>> string_sequence(5)\n>     '0 1 2 3 4 5'\n>     \"\"\"\n>     return ' '.join([str(x) for x in range(n + 1)])", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?"]}, {"test_id": "61", "test": "def test():\n        assert string_sequence(3) == '0 1 2 3'", "coverage_executed": "> def string_sequence(n: int) -> str:\n>     \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n>     >>> string_sequence(0)\n>     '0'\n>     >>> string_sequence(5)\n>     '0 1 2 3 4 5'\n>     \"\"\"\n>     return ' '.join([str(x) for x in range(n + 1)])", "coverage": "> def string_sequence(n: int) -> str:\n>     \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n>     >>> string_sequence(0)\n>     '0'\n>     >>> string_sequence(5)\n>     '0 1 2 3 4 5'\n>     \"\"\"\n>     return ' '.join([str(x) for x in range(n + 1)])", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?"]}, {"test_id": "62", "test": "def test():\n        assert string_sequence(10) == '0 1 2 3 4 5 6 7 8 9 10'", "coverage_executed": "> def string_sequence(n: int) -> str:\n>     \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n>     >>> string_sequence(0)\n>     '0'\n>     >>> string_sequence(5)\n>     '0 1 2 3 4 5'\n>     \"\"\"\n>     return ' '.join([str(x) for x in range(n + 1)])", "coverage": "> def string_sequence(n: int) -> str:\n>     \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n>     >>> string_sequence(0)\n>     '0'\n>     >>> string_sequence(5)\n>     '0 1 2 3 4 5'\n>     \"\"\"\n>     return ' '.join([str(x) for x in range(n + 1)])", "coverage_sequence": [">", ">", ">", ">", ">", ">", ">", ">"], "branch_sequence": ["?", "?", "?", "?", "?", "?", "?", "?"]}]}